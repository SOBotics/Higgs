/* 
 * Higgs API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing BotApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class BotApiTests
    {
        private BotApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new BotApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of BotApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' BotApi
            //Assert.IsInstanceOfType(typeof(BotApi), instance, "instance is a BotApi");
        }

        
        /// <summary>
        /// Test BotAquireTokenPost
        /// </summary>
        [Test]
        public void BotAquireTokenPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? botId = null;
            //string secret = null;
            //List<string> requestedScopes = null;
            //instance.BotAquireTokenPost(botId, secret, requestedScopes);
            
        }
        
        /// <summary>
        /// Test BotRegisterFeedbackTypesPost
        /// </summary>
        [Test]
        public void BotRegisterFeedbackTypesPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RegisterFeedbackTypesRequest request = null;
            //instance.BotRegisterFeedbackTypesPost(request);
            
        }
        
        /// <summary>
        /// Test BotRegisterPostPost
        /// </summary>
        [Test]
        public void BotRegisterPostPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RegisterPostRequest request = null;
            //instance.BotRegisterPostPost(request);
            
        }
        
        /// <summary>
        /// Test BotRegisterUserFeedbackByContentPost
        /// </summary>
        [Test]
        public void BotRegisterUserFeedbackByContentPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RegisterUserFeedbackByContentRequest request = null;
            //instance.BotRegisterUserFeedbackByContentPost(request);
            
        }
        
        /// <summary>
        /// Test BotRegisterUserFeedbackPost
        /// </summary>
        [Test]
        public void BotRegisterUserFeedbackPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RegisterUserFeedbackRequest request = null;
            //instance.BotRegisterUserFeedbackPost(request);
            
        }
        
    }

}
